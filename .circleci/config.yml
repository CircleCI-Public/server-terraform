version: 2.1

orbs:
  shellcheck: circleci/shellcheck@2.2.0

workflows:
  version: 2
  terraform-validate:
    jobs:
      - shellcheck/check
      - format
      - check_docs
      - tfsec
      - validate:
          matrix:
            parameters:
              root: [nomad-aws, nomad-gcp]
          requires:
            - format
            - shellcheck/check
      - test:
          matrix:
            parameters:
              root: [nomad-aws, nomad-gcp]
          requires:
            - format
            - shellcheck/check

executors:
  deploy:
    resource_class: medium
    docker:
      - image: cimg/deploy:2025.01
  tfsec:
    resource_class: small
    docker:
      - image: aquasec/tfsec:v1.28
  linux-vm:
    machine:
      image: ubuntu-2004:current
      resource_class: small

jobs:
  validate:
    executor: deploy
    parameters:
      root:
        type: string
    environment:
      TF_LOG: info
    steps:
      - checkout
      - run:
          name: "Terraform validate"
          command: |
            for dir in ./examples/*/; do
              if [ -d "$dir" ]; then
                echo "Processing $dir"
                cd "$dir"
                terraform init
                terraform validate
                cd - > /dev/null
              fi
            done
          working_directory: << parameters.root >>

  test:
    executor: deploy
    parameters:
      root:
        type: string
    environment:
      TF_LOG: info
    steps:
      - checkout
      - run:
          name: "Terraform test"
          command: |
            terraform init -backend=false

            # Required by the nomad-gcp tests to have some dummy credentials...
            export GOOGLE_PROJECT="dummy-project" GOOGLE_CREDENTIALS='{"type": "service_account"}'

            terraform test
          working_directory: << parameters.root >>

  format:
    executor: deploy
    steps:
      - checkout
      - run: terraform fmt -check -diff -recursive

  tfsec:
    executor: tfsec
    steps:
      - checkout
      - run: tfsec .

  check_docs:
    executor: linux-vm
    steps:
      - checkout
      - run:
          name: Generate Docs
          command: make docs
      - run:
          name: Check if docs need to be updated
          command: |
            set +eo pipefail
            git diff --quiet nomad-aws/README.md nomad-gcp/README.md
            if [ $? -ne 0 ]; then
              echo "There have been docs changes. Please run the 'make docs' command locally."
              exit 1
            else
              echo "Docs are up to date. No changes required."
            fi
